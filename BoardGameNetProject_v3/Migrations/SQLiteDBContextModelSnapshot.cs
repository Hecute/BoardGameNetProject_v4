// <auto-generated />
using BoardGameNetProject_v3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameNetProject_v3.Migrations
{
    [DbContext(typeof(SQLiteDBContext))]
    partial class SQLiteDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("BoardGameNetProject_v3.Models.BoardGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");
                });

            modelBuilder.Entity("BoardGameNetProject_v3.Models.UserGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("User_rate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("boardGameVmId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("boardGameVmId");

                    b.ToTable("UserGames");
                });

            modelBuilder.Entity("BoardGameNetProject_v3.Models.UserGame", b =>
                {
                    b.HasOne("BoardGameNetProject_v3.Models.BoardGame", "boardGameVm")
                        .WithMany()
                        .HasForeignKey("boardGameVmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("boardGameVm");
                });
#pragma warning restore 612, 618
        }
    }
}
